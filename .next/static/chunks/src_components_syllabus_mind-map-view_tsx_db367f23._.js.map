{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/syllabus/mind-map-view.tsx"],"sourcesContent":["\"use client\";\n\nimport React, { useCallback, useMemo } from 'react';\nimport ReactFlow, {\n  Controls,\n  Background,\n  applyNodeChanges,\n  applyEdgeChanges,\n  type Node,\n  type Edge,\n  type OnNodesChange,\n  type OnEdgesChange,\n  type DefaultEdgeOptions,\n  type FitViewOptions,\n} from 'reactflow';\nimport type { SyllabusTopic } from '@/lib/types';\n\ninterface MindMapViewProps {\n  data: SyllabusTopic[];\n}\n\nconst nodeWidth = 200;\nconst nodeHeight = 50; // Estimated height, actual might vary\nconst verticalGap = 20;\nconst horizontalGap = 280;\n\n// A recursive function to lay out the nodes in a tree structure.\nconst generateLayout = (\n  topics: SyllabusTopic[],\n  level = 0,\n  yOffset = 0,\n  parent: SyllabusTopic | null = null\n): { nodes: Node[]; edges: Edge[]; height: number } => {\n  const allNodes: Node[] = [];\n  const allEdges: Edge[] = [];\n  let currentY = yOffset;\n\n  topics.forEach((topic) => {\n    const nodeId = topic.id;\n\n    // First, process children to get their layout and total height\n    let subTreeHeight = 0;\n    if (topic.subtopics && topic.subtopics.length > 0) {\n      const { nodes: childNodes, edges: childEdges, height } = generateLayout(\n        topic.subtopics,\n        level + 1,\n        currentY,\n        topic\n      );\n      allNodes.push(...childNodes);\n      allEdges.push(...childEdges);\n      subTreeHeight = height;\n    }\n\n    // Now, position the current node.\n    // It's placed vertically in the middle of the area its children occupy.\n    const nodeX = level * horizontalGap;\n    const nodeY =\n      currentY + (subTreeHeight > 0 ? subTreeHeight / 2 - nodeHeight / 2 : 0);\n    \n    allNodes.push({\n      id: nodeId,\n      data: { label: topic.title },\n      position: { x: nodeX, y: nodeY },\n      type: 'default',\n      style: {\n        width: nodeWidth,\n        textAlign: 'center',\n        fontSize: '12px',\n        background: 'hsl(var(--card))',\n        color: 'hsl(var(--card-foreground))',\n        border: '1px solid hsl(var(--border))',\n      },\n      sourcePosition: 'right',\n      targetPosition: 'left',\n    });\n\n    // Add edge from parent to the current node\n    if (parent) {\n      allEdges.push({\n        id: `e-${parent.id}-${nodeId}`,\n        source: parent.id,\n        target: nodeId,\n        type: 'smoothstep',\n      });\n    }\n\n    // The Y for the next sibling starts after the current node's subtree\n    currentY += Math.max(nodeHeight, subTreeHeight) + verticalGap;\n  });\n  \n  const totalHeight = currentY - yOffset - (topics.length > 0 ? verticalGap : 0);\n\n  return { nodes: allNodes, edges: allEdges, height: totalHeight };\n};\n\nconst fitViewOptions: FitViewOptions = {\n  padding: 0.2,\n};\n\nconst defaultEdgeOptions: DefaultEdgeOptions = {};\n\nexport default function MindMapView({ data }: MindMapViewProps) {\n  const { nodes: initialNodes, edges: initialEdges } = useMemo(\n    () => generateLayout(data),\n    [data]\n  );\n  \n  const [nodes, setNodes] = React.useState<Node[]>(initialNodes);\n  const [edges, setEdges] = React.useState<Edge[]>(initialEdges);\n\n  const onNodesChange: OnNodesChange = useCallback(\n    (changes) => setNodes((nds) => applyNodeChanges(changes, nds)),\n    [setNodes]\n  );\n  const onEdgesChange: OnEdgesChange = useCallback(\n    (changes) => setEdges((eds) => applyEdgeChanges(changes, eds)),\n    [setEdges]\n  );\n  \n  React.useEffect(() => {\n    // Recalculate layout if data changes\n    const { nodes: newNodes, edges: newEdges } = generateLayout(data);\n    setNodes(newNodes);\n    setEdges(newEdges);\n  }, [data]);\n\n  return (\n    <div className=\"h-[75vh] w-full rounded-lg border bg-background\">\n      <ReactFlow\n        nodes={nodes}\n        edges={edges}\n        onNodesChange={onNodesChange}\n        onEdgesChange={onEdgesChange}\n        fitView\n        fitViewOptions={fitViewOptions}\n        defaultEdgeOptions={defaultEdgeOptions}\n        proOptions={{ hideAttribution: true }}\n      >\n        <Controls />\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}